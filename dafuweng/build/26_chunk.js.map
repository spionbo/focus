{"version":3,"sources":["webpack:///./src/scene/snow.js"],"names":["module","exports","radius","speed","density","Math","random","canvas","document","getElementById","ctx","getContext","W","window","innerWidth","H","innerHeight","width","height","particles","i","push","x","y","r","d","draw","clearRect","fillStyle","beginPath","p","moveTo","arc","PI","fill","update","angle","cos","sin","setInterval"],"mappings":"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","file":"26_chunk.js?name=05c98ee84cb2002c1339","sourcesContent":["module.exports = function( radius , speed ,  density ) { //雪花半径大小 ,雪花下落速度 , 雪花密度\r\n    radius = radius || Math.random() * 3 + 1;\r\n    speed = speed || 15;\r\n    density = density || 100;\r\n    //canvas init\r\n    var canvas = document.getElementById(\"canvas\");\r\n    if(!canvas) return;\r\n    var ctx = canvas.getContext(\"2d\");\r\n    //canvas dimensions\r\n    var W = window.innerWidth;\r\n    var H = window.innerHeight;\r\n    canvas.width = W;\r\n    canvas.height = H;\r\n    //snowflake particles\r\n    var particles = [];\r\n    for (var i = 0; i < density; i++) {\r\n        particles.push({\r\n            x: Math.random() * W, //x-coordinate\r\n            y: Math.random() * H, //y-coordinate\r\n            r: radius, //radius\r\n            d: Math.random() * density //density\r\n        })\r\n    }\r\n    //Lets draw the flakes\r\n    function draw() {\r\n        ctx.clearRect(0, 0, W, H);\r\n        ctx.fillStyle = \"rgba(255, 255, 255, 0.8)\";\r\n        /* ctx.fillStyle = \"#FF0000\";*/\r\n        ctx.beginPath();\r\n        for (var i = 0; i < density; i++) {\r\n            var p = particles[i];\r\n            ctx.moveTo(p.x, p.y);\r\n            ctx.arc(p.x, p.y, p.r, 0, Math.PI * 2, true);\r\n        }\r\n        ctx.fill();\r\n        update();\r\n    }\r\n    //Function to move the snowflakes\r\n    //angle will be an ongoing incremental flag. Sin and Cos functions will be applied to it to create vertical and horizontal movements of the flakes\r\n    var angle = 0;\r\n\r\n    function update() {\r\n        angle += 0.01;\r\n        for (var i = 0; i < density; i++) {\r\n            var p = particles[i];\r\n            //Updating X and Y coordinates\r\n            //We will add 1 to the cos function to prevent negative values which will lead flakes to move upwards\r\n            //Every particle has its own density which can be used to make the downward movement different for each flake\r\n            //Lets make it more random by adding in the radius\r\n            p.y += Math.cos(angle + p.d) + 1 + p.r / 2;\r\n            p.x += Math.sin(angle) * 2;\r\n            //Sending flakes back from the top when it exits\r\n            //Lets make it a bit more organic and let flakes enter from the left and right also.\r\n            if (p.x > W || p.x < 0 || p.y > H) {\r\n                if (i % 3 > 0) //66.67% of the flakes\r\n                {\r\n                    particles[i] = {\r\n                        x: Math.random() * W,\r\n                        y: -10,\r\n                        r: p.r,\r\n                        d: p.d\r\n                    };\r\n                } else {\r\n                    //If the flake is exitting from the right\r\n                    if (Math.sin(angle) > 0) {\r\n                        //Enter fromth\r\n                        particles[i] = {\r\n                            x: 0,\r\n                            y: Math.random() * H,\r\n                            r: p.r,\r\n                            d: p.d\r\n                        };\r\n                    } else {\r\n                        //Enter from the right\r\n                        particles[i] = {\r\n                            x: W,\r\n                            y: Math.random() * H,\r\n                            r: p.r,\r\n                            d: p.d\r\n                        };\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    //animation loop\r\n    setInterval(draw, speed);\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scene/snow.js"],"sourceRoot":""}